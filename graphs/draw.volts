#!/usr/bin/perl
use strict;
use GD;
use GD::Polyline;

# my $outfile = shift;

# create an image
my $xgmax = 1000;
my $ygmax = 600;

my $image = new GD::Image ($xgmax, $ygmax);
my $white  = $image->colorAllocate(255,255,255);
my $black  = $image->colorAllocate(  0,  0,  0);
my $red    = $image->colorAllocate(255,  0,  0);
my $green  = $image->colorAllocate(0,  255,  0);
my $blue   = $image->colorAllocate(0,   0,  255);
 
# create a new polyline
my $polyline = new GD::Polyline;
my $polyline2 = new GD::Polyline;
my $polyline3 = new GD::Polyline;
my $polyline4 = new GD::Polyline;

my $poly_x_axis  = new GD::Polyline;
my $poly_y_axis  = new GD::Polyline;
my $poly_y2_axis = new GD::Polyline;
my $poly_y3_axis = new GD::Polyline;
my $poly_y4_axis = new GD::Polyline;
                 
# add some points
#$polyline->addPt(  0,  0);

my @xmax;
my @xmin;
my @ymax;
my @ymin;
my @yinv;

# run1
$xmax[0] = 84000;
$xmin[0] = 12000;

$ymax[0] = 14;
$ymin[0] = 13;
$yinv[0] = 1;
 
$xmax[1] = 61000;
$xmin[1] = -1000;
 
$ymax[1] = 14.1;
$ymin[1] = 12.9;
$yinv[1] = 1;

# amps
$ymax[2] = 11;
$ymin[2] = -1;
$yinv[2] = 1;

# SOC
$ymax[3] = 110;
$ymin[3] = -10;
$yinv[3] = 1;

# balance
$ymax[4] = 3;
$ymin[4] = -20;
$yinv[4] = 1;



my $line = 0;
my $seconds;
my $volts;
my $bal;
my $amps;
my $soc;


# load up the input data file
while (<>) {
    @_ = split ' ', $_;
    $seconds = $_[0];
    $volts = $_[1];
    $bal = $_[2];
    $amps = $_[3];
    $soc = $_[4];
    $line++;
    $polyline->addPt(&xscale(1, $seconds), &yscale(1, $volts)); 
    $polyline2->addPt(&xscale(1, $seconds), &yscale(2, $amps)); 
    $polyline3->addPt(&xscale(1, $seconds), &yscale(3, $soc)); 
    $polyline4->addPt(&xscale(1, $seconds), &yscale(4, $bal)); 
}

&draw_x_axis($poly_x_axis,  1, 1, $ygmax-100, 5,  0, 60000, 3600, $black, "Hours", $xgmax/2, $ygmax-100, 3600  );
&draw_y_axis($poly_y_axis,  1, 1, 2,   5, 13, 14, 0.1, $black, "Battery Volts", 10, 50  );
&draw_y_axis($poly_y2_axis, 1, 2, 850, 5,  0, 10, 1.0, $red, "Charge Current A", 860, 50) ;
&draw_y_axis($poly_y3_axis, 1, 3, 750, 5,  0, 100, 10, $green, "SOC %", 760, 50) ;
&draw_y_axis($poly_y4_axis, 1, 4, 650, 5,  0,  1,  1, $blue,  "Bal",   660, 50) ;

# draw the polyline curves
$image->polydraw($polyline,$black);
$image->polydraw($polyline2,$red);
$image->polydraw($polyline3,$green);
$image->polydraw($polyline4,$blue);
 
 
# output the png
binmode STDOUT;
print $image->png;

sub xscale
{
    my $index = shift;
    my $inval = shift;
    return  (($inval-$xmin[$index]) * $xgmax ) / ($xmax[$index] - $xmin[$index]);
}

sub yscale
{
    my $index = shift;
    my $inval = shift;
    my $outval;
    $outval = (($inval-$ymin[$index]) * $ygmax ) / ($ymax[$index] - $ymin[$index]);
    if  ($yinv[$index])
    {
	$outval = $ygmax - $outval;
    }
    return $outval;
}
    
sub draw_y_axis
{
    my $line = shift;
    my $xindex = shift;
    my $yindex = shift;;
    my $x_coord = shift; # in screen units!
    my $ticwidth = shift;
    my $min = shift;
    my $max = shift;
    my $step = shift;
    my $color = shift;
    my $label = shift;
    my $labelx = shift;
    my $labely = shift;
    
    for (my $i=$min; $i<= $max; $i+=$step)
    {
	$line->addPt($x_coord, int(&yscale($yindex, $i))); # start at bottom on line
	     $line->addPt($x_coord+$ticwidth, int(&yscale($yindex, $i))); # tic right
	     $line->addPt($x_coord, int(&yscale($yindex, $i))); # back to axis centreline
	$image->string(GD::Font->Small, $x_coord+$ticwidth,-15+int(&yscale($yindex, $i)), sprintf("%1.1f", $i), $color); 

    }
    $image->string(GD::Font->Small, $labelx, $labely, $label, $color); 
    $image->polydraw($line,$color);
}

sub draw_x_axis
{
    my $line = shift;
    my $xindex = shift;
    my $yindex = shift;;
    my $y_coord = shift; # in screen units!
    my $ticwidth = shift;
    my $min = shift;
    my $max = shift;
    my $step = shift;
    my $color = shift;
    my $label = shift;
    my $labelx = shift;
    my $labely = shift;
    my $label_scale = shift;
    
    for (my $i=$min; $i<= $max; $i+=$step)
    {
	$line->addPt(int(&xscale($xindex, $i)), $y_coord); # start at bottom on line
	     $line->addPt(int(&xscale($xindex, $i)), $y_coord+$ticwidth); # tic right
	     $line->addPt(int(&xscale($xindex, $i)), $y_coord); # back to axis centreline
	$image->string(GD::Font->Small, int(&xscale($yindex, $i)), $y_coord, sprintf("%d", $i/$label_scale), $color); 

    }
    $image->string(GD::Font->Small, $labelx, $labely, $label, $color); 
    $image->polydraw($line,$color);
}
